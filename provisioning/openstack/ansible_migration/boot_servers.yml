# boot_servers() {
#   required_args="key:$key instance-name:$instance_name"
#   validate_args "$required_args"
#
#   # Provision VMs
#   image_ami=$(nova image-list | awk "/$image_name_search/"'{print $2}')
#   [ $(echo "$image_ami" | grep -c ".*") != 1 ] && safe_out "error" "--image-name $image_name_search gave multiple matches. Be more specific" && exit 2
#
#   safe_out "debug" "nova boot --image ${image_ami} --flavor ${flavor} --key-name ${key} ${options} ${instance_name}"
#   instance_status=$(nova boot --image ${image_ami} --flavor ${flavor} --key-name ${key} ${options} ${instance_name} | awk '/^\| id/ || /^\| status/ {print $4}')
#   safe_out "debug" "${instance_status}"
#   instance_status=${instance_status//$'\n'/ }
#   instance_id=${instance_status%' '*}
#   status=${instance_status#*' '}
#
#   if [ "$status" != "BUILD" ]; then
#     echo "Something went wrong during image creation."
#     echo "Status expected: BUILD"
#     echo "Status received: $status"
#     exit 1
#   fi
#
#   # added to support multiple instances
#   instance_ids=$(nova list --name ${instance_name} | awk "/${instance_name}/"'{print $2}')
#
#   for instance_id in ${instance_ids//$'\n'/ }; do
#
#     instance_name=$(nova show $instance_id | awk "/ name/"'{print $4}')
#
#     # need to wait for instance to be in running state
#     wait_for_instance_running $instance_id
#     safe_out "info" "Instance ${instance_name} is active. Waiting for ssh service to be ready..."
#     instance_ip=$(nova show ${instance_id} | awk '/os1-internal.*network/ {print $5$6}')
#
#     # need to wait until ssh service comes up on instance
#     wait_for_ssh ${instance_ip#*,} 120
#
#     if [ -n "$volume_size" ]; then
#       safe_out "info" "Adding a Volume"
#       attach_volume $instance_id $volume_size
#     fi
#
#     safe_out "info" "Instance ${instance_name} is accessible and ready to use."
#
#     if [ "$interactive" = "true" ]; then
#       echo "Instance IP: ${instance_ip//,/|}"
#     else
#       echo "${instance_ip//,/|}"
#     fi
#
#   done
#
# }
---
  hosts:
    tasks:
      -
