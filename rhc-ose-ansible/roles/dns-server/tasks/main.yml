---
- name: Install bind and bind-utils
  action: "{{ ansible_pkg_mgr }} name={{item}} state=latest"
  with_items:
  - bind
  - bind-utils

- name: Enable named
  service: name=named enabled=yes

- name: Install firewalld
  action: "{{ ansible_pkg_mgr }} name=firewalld state=latest"

- name: Enable firewalld
  service: name=firewalld enabled=yes state=started

- name: Open Firewall for DNS
  firewalld: port={{item}} permanent=yes state=enabled immediate=yes
  with_items:
  - 53/tcp
  - 53/udp

- name: Setup Zone Directory
  file: 
    dest: /var/named/static 
    state: directory 
    owner: named 
    group: named 
    mode: 0770

- name: Setup ACLs
  template: 
    src: named.conf.acl.j2
    dest: /etc/named/named.conf.acl 
    owner: named 
    group: named
    mode: 0660

- name: Setup DNS Logging configuration
  template: 
    src: named.conf.logging.j2
    dest: /etc/named/named.conf.logging
    owner: named
    group: named
    mode: 0660

- name: Setup Views and Zones configuration
  template:
    src: named.conf.view.j2
    dest: /etc/named/named.conf.view
    owner: named
    group: named
    mode: 0660

- name: Setup Controls configuration
  template:
    src: named.conf.controls.j2
    dest: /etc/named/named.conf.controls
    owner: named
    group: named
    mode: 0660

- name: Setup Domain Keys configuration
  template:
    src: named.conf.domain-keys.j2
    dest: /etc/named/named.conf.domain-keys
    owner: named
    group: named
    mode: 0660

- name: Setup key for service named status to communicate with BIND
  command: "/sbin/rndc-confgen -a -r /dev/urandom"

- name: Ensure correct permissions and ownerships on rndc.key file
  file: path=/etc/rndc.key owner=root group=named mode=0640

- name: Clean out old key files
  shell: "rm -f /var/named/K{{ item.0.name }}-{{ item.1.dns_domain }}*"
  with_subelements:
  - named_config_views
  - zone

- name: Generate keys for nsupdate
  command: "/sbin/dnssec-keygen -a HMAC-MD5 -b 512 -n USER -r /dev/urandom -K /var/named {{ item.0.name }}-{{ item.1.dns_domain }}"
  with_subelements:
  - named_config_views
  - zone

- name: Gather keys for nsupdate
  shell: "grep Key: /var/named/K{{ item.0.name }}-{{ item.1.dns_domain }}*.private | cut -d ' ' -f 2"
  register: nsupdate_keys
  with_subelements:
  - named_config_views
  - zone

- name: Setup key files for nsupdate
  template:
    src: domain-key.j2
    dest: /var/named/{{ item.item.0.name }}-{{ item.item.1.dns_domain }}.key
    owner: named
    group: named
    mode: 0660
  with_items: nsupdate_keys.results

- name: Prepare Zone Files
  template: 
    src: zone.db.j2
    dest: /var/named/static/{{ item.0.name }}-{{ item.1.dns_domain }}.db
    owner: named
    group: named
    mode: 0660
  with_subelements:
  - named_config_views
  - zone

- name: Configure named
  copy:
    src: named.conf
    dest: /etc/named.conf
    owner: named
    group: named 
    mode: 0660
  
- name: Configure named options
  template:
    src: named.conf.options.j2
    dest: /etc/named/named.conf.options
    owner: named
    group: named 

- name: Restart named
  service: name=named state=restarted

