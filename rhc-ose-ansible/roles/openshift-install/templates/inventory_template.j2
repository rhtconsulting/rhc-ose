# Create an OSEv3 group that contains the master, nodes, etcd, and lb groups.
# The lb group lets Ansible configure HAProxy as the load balancing solution.
# Comment lb out if your load balancer is pre-configured.
[OSEv3:children]
masters
nodes
{% if groups['etcd'] is defined %}
etcd
{% endif %}
{% if groups['lb'] is defined %}
lb
{% endif %}

# Set variables common for all OSEv3 hosts
[OSEv3:vars]
{% if ansible_ssh_user is defined %}
ansible_ssh_user={{ ansible_ssh_user }}
{% elif ansible_user is defined %}
ansible_ssh_user={{ ansible_user }}
{% endif %}
{% if ansible_sudo is defined %}
ansible_sudo={{ ansible_sudo }}
{% elif become is defined %}
ansible_sudo={{ become }}
{% endif %}
deployment_type=openshift-enterprise

# Uncomment the following to enable htpasswd authentication; defaults to
# DenyAllPasswordIdentityProvider.
#openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
openshift_master_identity_providers={{ rhc_ose_identity_provider | default( htpasswd ) }}


{% if rhc_ose_cluster_method is defined %}
# Native high availbility cluster method with optional load balancer.
# If no lb group is defined installer assumes that a load balancer has
# been preconfigured. For installation the value of
# openshift_master_cluster_hostname must resolve to the load balancer
# or to one or all of the masters defined in the inventory if no load
# balancer is present.
openshift_master_cluster_method={{ rhc_ose_cluster_method }}
openshift_master_cluster_hostname={{ rhc_ose_cluster_hostname }}
openshift_master_cluster_public_hostname={{ rhc_ose_cluster_public_hostname }}
{% endif %}

# override the default controller lease ttl
#osm_controller_lease_ttl=30

# host group for masters
[masters]
{% for inv_master in groups['masters'] %}
{{ hostvars[inv_master]['ansible_hostname'] }}.{{dns_domain}} openshift_hostname={{ hostvars[inv_master]['ansible_hostname'] }}.{{dns_domain}} openshift_public_hostname={{ hostvars[inv_master]['ansible_hostname'] }}.{{dns_domain}}

{% endfor %}
{% if groups['etcd'] is defined %}

# host group for etcd
[etcd]
{% for inv_etcd in groups['etcd'] %}
{{ hostvars[inv_etcd]['ansible_hostname'] }}.{{dns_domain}} openshift_hostname={{ hostvars[inv_etcd]['ansible_hostname'] }}.{{dns_domain}} openshift_public_hostname={{ hostvars[inv_etcd]['ansible_hostname'] }}.{{dns_domain}}
{% endfor %}
{% endif %}
{% if groups['lb'] is defined %}

# Specify load balancer host
[lb]
{% for inv_lbs in groups['lb'] %}
{{ hostvars[inv_lbs]['ansible_hostname'] }}.{{dns_domain}} openshift_hostname={{ hostvars[inv_etcd]['ansible_hostname'] }}.{{dns_domain}} openshift_public_hostname={{ hostvars[inv_etcd]['ansible_hostname'] }}.{{dns_domain}}
{% endfor %}
{% endif %}

# host group for nodes, includes region info
[nodes]
{% for inv_master in groups['masters'] %}
{{ hostvars[inv_master]['ansible_hostname'] }}.{{dns_domain}} openshift_hostname={{ hostvars[inv_master]['ansible_hostname'] }}.{{dns_domain}} openshift_public_hostname={{ hostvars[inv_master]['ansible_hostname'] }}.{{dns_domain}} openshift_node_labels="{'type': 'master'}"
{% endfor %}
{% set counter = 0 %}
{% for inv_node in groups['nodes'] %}
{% if counter == 0%}
{{ hostvars[inv_node]['ansible_hostname'] }}.{{dns_domain}} openshift_hostname={{ hostvars[inv_node]['ansible_hostname'] }}.{{dns_domain}} openshift_public_hostname={{ hostvars[inv_node]['ansible_hostname'] }}.{{dns_domain}} openshift_node_labels="{'type': 'infra'}"
{% else %}
{{ hostvars[inv_node]['ansible_hostname'] }}.{{dns_domain}} openshift_hostname={{ hostvars[inv_node]['ansible_hostname'] }}.{{dns_domain}} openshift_public_hostname={{ hostvars[inv_node]['ansible_hostname'] }}.{{dns_domain}} openshift_node_labels="{'type': 'app'}"
{% endif %}
{% set counter = counter + 1%}
{% endfor -%}
